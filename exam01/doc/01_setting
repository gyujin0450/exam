# 코딩으로 배우는 스프링(구판) 스터디 노트

-------------------------------------------------------------------

[2019.12.14]

# 프로젝트 생성

# .gitignore 설정
  https://gs.saro.me/dev?tn=440
  
# JDK 버전 처리(p38)

# Spring 프레임워크 버전 변경(p41)

# Tomcat 8.5 설치(p43)

# MySQL 설치(p58~)

# MySQL 스키마 추가(p66~)

-----------------------------------------------------------------

[2019.12.15]

# MySQL 연결 테스트와 jUnit(p70~)

# 스프링 + MyBatis + MySQL 설정(p77~)
  - spring-jdbc, spring-test 라이브러리
  - MyBatis, MyBatis-spring
 
# root-context.xml 수정(p83~)
  - 네임스페이스에 aop, context, jdbc, mybatis-spring 옵션 체크
  
-------------------------------------------------------------------

[2019.12.16]

# MySQL과의 연결을 담당하는 DataSource 설정하기(p86~)

# MyBatis와 MySQL 연결하는 SqlSessionFactory 객체 생성(p90~)

# mybatis-config.xml 파일 추가(p91~)

# MyBatis의 연결 테스트(p93~)

--------------------------------------------------------------------

[2019.12.18]

# MVC 이해(p97~)
  - 스프링 MVC의 컨트롤러가 무엇을 처리하는가?
    1) 파라미터 수집 : VO
    2) 어노테이션을 통한 간편한 설정
    3) 로직 집중
    4) 편리한 테스트
  - 컨트롤러의 특징
    1) @controller 라는 어노테이션만 추가하면 됨
    2) 메소드의 파라미터와 리턴 타입에 제약이 없음
    3) 스프링 MVC가 제공하는 유용한 클래스들이 존재함(예:파일 업로드 등)
    
# servlet-context.xml(p103~)
  - 스프링 MVC관련 설정만을 분리하기 위해 만들어진 파일

# 어노테이션의 종류(p105)

# 기초적인 컨트롤러 생성 실습(p105~)
  - void 리턴 타입의 경우 : SampleController
  - String 리턴 타입의 경우 : SampleController2
  - 만들어진 결과 데이터를 전달해야 하는 경우 : ProductVO, SampleController3
  - 리다이렉트를 해야 하는 경우 : SampleController4
    > [오류-p114] 값이 전달되지 않음
  - JSON 데이터를 생성하는 경우 : SampleController5
  
#  WAS 없이 컨투롤러를 테스트 하기(p188~)
   > [오류-p120] No mapping found for HTTP request with URI [/doA] in DispatcherServlet with name ''
     - https://stufeel.tistory.com/8
  
  
--------------------------------------------------------------------
 
[2019.12.19]
 
# 스프링 + MyBatis
  - MyBatis : 인터페이스와 어노테이션을 통행 SQL문 설정 처리
  - 국내 : XML만을 이용해서 SQL문을 설정, DAO에서는 XML을 찾아서 실행하는 코드 작성
 
# MyBatis를 XML을 사용해서 작성하는 코딩(p125)
  - 테이블 생성 및 개발 준비
    > 테이블 생성 및 기타 데이터베이스 관련 설정
  - 도메인 객체의 설계 및 클래스 작성
  - DAO 인터페이스의 작성
    > 실행해야하는 기능을 인터페이스로 정의
  - XML Mapper의 생성과 SQL문 작성
  - XML 작성 및 SQL 작성
  - MyBatis에서 작성된 XML Mapper를 인식하도록 설정
  - DAO 구현
  - DAO 인터페이스를 구현한 클래스 작성
  - 스프링상에 DAO 등록 및 테스트
   
# 테이블 생성 및 개발 준비(p126)
  > tbl_member 생성
 
# 도메인 객체를 위한 클래스 설계(p128)
  - 도메인 : 개발시 중요한 용어가 될만한 명사(예: 회원, 상품, 배송 등)
  > MemberVO
   
# DAO 인테페이스 작성(p128)
  - 실제로 실행해야하느 작업을 인터페이스로 정의
  - DAO로 작성하는 것은 향후 DB 과련 기술이 변경 되더라도
    DAO만을 변경해서 처리할 수 있도록 하고자 하는 것
  > MemberDAO
  
--------------------------------------------------------------------
 
[2019.12.19]

# XML Mapper의 작성(p129~
  - MyBatis에서 SQL문을 저장하는 존재를 Mapper라는 용어로 표현
  - Mapper는 XML과 인터페이스를 이용할 수 있음
  
  - Java 파일이 아닌 경우 'resources'와 같은 경로를 이용함
  - Mapper를 'mappers'와 같이 생성
  
  - XML Mapper 작성
  > https://mybatis.org/mybatis-3/ko/getting-started.html
  
  > namespace 속성은 클래스 패키지와 유사한 용도로
    Mybatis내에서 원하는 SQL문을 찾아서 실행할때 동작함
    
  - myBatis-Spring에서 XML Mapper 인식
  > root-context.xml 설정
  
# DAO 인터페이스의 구현(p133~
  - MyBatis에서 DAO를 이용하는 경우는 SqlSessionTemplate 라는 것을 이용해
    DAO를 구현하므로 우선 SqlSessionTemplate을 설정함
    
  - SqlSessionTemplate
    > 데이터베이스와 연결을 맺고, 작업이 완료된후에 연결을 close()하는 작업 수행
    > MyBatis의 SqlSession 인터페이스를 구현한 클래스
    > 트랜잭션의 관리나 쓰레드 처리의 안정성 등을 보장해주고
      데이터베이스의 연결과 종료를 책임짐
    > SqlSessionTemplate은 SqlSessionFactory를 생성자로 주입해서 설정함
    > root-context.xml에 설정함     

## 구현 클래스 작성(p134)
	> 
    
   
    
 
  



     	





  


  
 

  